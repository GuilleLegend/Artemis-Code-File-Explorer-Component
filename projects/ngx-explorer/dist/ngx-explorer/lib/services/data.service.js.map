{"version":3,"file":"data.service.js","sourceRoot":"","sources":["../../../../src/lib/services/data.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAO3C,IAAsB,WAAW,GAAjC,MAAsB,WAAW;CAmBhC,CAAA;AAnBqB,WAAW;IAHhC,UAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACoB,WAAW,CAmBhC;SAnBqB,WAAW","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IDataService } from '../shared/types';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DataService implements IDataService<any> {\r\n    abstract getNodeChildren(node: any);\r\n    abstract createNode(parentNode: any, name: any);\r\n    abstract renameNode(node: any, newName: string);\r\n    abstract renameLeaf(node: any, newName: string);\r\n    abstract deleteNodes(nodes: any[]);\r\n    abstract deleteLeafs(nodes: any[]);\r\n    abstract uploadFiles(node: any, files: File[]);\r\n    abstract download(node: any); // TODO multple download. should be configurable in settings\r\n    abstract openLeaf(node:any);\r\n    abstract open(node:any);\r\n    abstract share(node:any);\r\n    abstract rightClick(node:any);\r\n    abstract leftClick(node:any);\r\n    abstract emptyClick();\r\n    abstract getCurrentPath(path:string);\r\n    // move(from to) // TODO: on/off in settings\r\n    // copyPaste(from to) // TODO: on/off in settings\r\n    // cutPaste(from to) // TODO: on/off in settings\r\n}\r\n"]}