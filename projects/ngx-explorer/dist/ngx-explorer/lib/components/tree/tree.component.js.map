{"version":3,"file":"tree.component.js","sourceRoot":"","sources":["../../../../../src/lib/components/tree/tree.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { ExplorerService } from '../../services/explorer.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { HelperService } from '../../services/helper.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { INode } from '../../shared/types';\r\n\r\ninterface TreeNode extends INode {\r\n    children: TreeNode[];\r\n    expanded: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'nxe-tree',\r\n    templateUrl: './tree.component.html',\r\n    styleUrls: ['./tree.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TreeComponent implements OnDestroy {\r\n    public treeNodes: TreeNode[] = [];\r\n    private expandedIds: number[] = [];\r\n    private sub = new Subscription();\r\n\r\n    constructor(private explorerService: ExplorerService, private helperService: HelperService) {\r\n        this.sub.add(this.explorerService.tree.pipe(filter(x => !!x)).subscribe(node => {\r\n            this.addExpandedNode(node.id); // always expand root\r\n            this.treeNodes = this.buildTree(node).children;\r\n        }));\r\n    }\r\n\r\n    open(node: INode) {\r\n        this.addExpandedNode(node.id);\r\n        this.explorerService.openNode(node.id);\r\n    }\r\n\r\n    expand(node: INode) {\r\n        this.addExpandedNode(node.id);\r\n        this.explorerService.expandNode(node.id);\r\n    }\r\n\r\n    collapse(node: INode) {\r\n        this.removeExpandedNode(node.id);\r\n        let nodes: INode;\r\n        this.sub.add(this.explorerService.tree.pipe(filter(x => !!x)).subscribe(x => nodes = x));\r\n        this.treeNodes = this.buildTree(nodes).children;\r\n    }\r\n\r\n    getName(node: INode) {\r\n        return this.helperService.getName(node);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n    private buildTree(node: INode): TreeNode {\r\n        const treeNode = {\r\n            id: node.id,\r\n            parentId: node.parentId,\r\n            data: node.data,\r\n            isLeaf: node.isLeaf,\r\n            children: [],\r\n            expanded: false\r\n        } as TreeNode;\r\n\r\n        treeNode.expanded = this.expandedIds.indexOf(node.id) > -1;\r\n        if (treeNode.expanded) {\r\n            treeNode.children = node.children.filter(x => !x.isLeaf).map(x => this.buildTree(x));\r\n        }\r\n        return treeNode;\r\n    }\r\n\r\n    private addExpandedNode(id: number) {\r\n        const index = this.expandedIds.indexOf(id);\r\n        if (index === -1) {\r\n            this.expandedIds.push(id);\r\n        }\r\n    }\r\n\r\n    private removeExpandedNode(id: number) {\r\n        const index = this.expandedIds.indexOf(id);\r\n        this.expandedIds.splice(index, 1);\r\n    }\r\n\r\n}\r\n"]}