{"version":3,"file":"menu-bar.component.js","sourceRoot":"","sources":["../../../../../src/lib/components/menu-bar/menu-bar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { INode } from '../../shared/types';\r\nimport { ExplorerService } from '../../services/explorer.service';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n    selector: 'nxe-menu-bar',\r\n    templateUrl: './menu-artemis.component.html',\r\n    styleUrls: ['./menu-bar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MenuBarComponent implements OnDestroy {\r\n    @ViewChild('uploader', { static: true }) uploader: ElementRef;\r\n\r\n    canDownload = false;\r\n    canDelete = false;\r\n    canRename = false;\r\n    canOpen = false;\r\n    canShare = false;\r\n\r\n    private sub = new Subscription();\r\n    private selection: INode[] = [];\r\n\r\n    constructor(private explorerService: ExplorerService, private helperService: HelperService) {\r\n        this.sub.add(this.explorerService.selectedNodes.subscribe(n => {\r\n            this.selection = n;\r\n            this.canDownload = n.filter(x => x.isLeaf).length === 1;\r\n            this.canDelete = n.length > 0;\r\n            this.canOpen = n.filter(x => x.isLeaf).length === 1;\r\n            this.canShare = n.filter(x => x.isLeaf).length === 1;\r\n            this.canRename = n.length === 1;\r\n        }));\r\n    }\r\n\r\n    open(){\r\n        this.explorerService.open();\r\n    }\r\n\r\n    share(){\r\n        this.explorerService.share();\r\n    }\r\n\r\n    createFolder() {\r\n        const name = prompt('Enter new folder name');\r\n        if (name) {\r\n            this.explorerService.createNode(name);\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        this.explorerService.refresh();\r\n        this.explorerService.getCurrentPath();\r\n    }\r\n\r\n    rename() {\r\n        if (this.selection.length === 1) {\r\n            const oldName = this.helperService.getName(this.selection[0].data);\r\n            const newName = prompt('Enter new name', oldName);\r\n            if (newName) {\r\n                this.explorerService.rename(newName);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        if (confirm('Are you sure you want to delete the selected files?')) {\r\n            this.explorerService.remove();\r\n        }\r\n    }\r\n\r\n    openUploader() {\r\n        this.uploader.nativeElement.click();\r\n    }\r\n\r\n    handleFiles(files: File[]) {\r\n        this.explorerService.upload(files);\r\n        this.uploader.nativeElement.value = '';\r\n    }\r\n\r\n    download() {\r\n        this.explorerService.download();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n}\r\n"]}