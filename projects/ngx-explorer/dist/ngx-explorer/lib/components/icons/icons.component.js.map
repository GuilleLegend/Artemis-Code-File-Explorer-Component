{"version":3,"file":"icons.component.js","sourceRoot":"","sources":["../../../../../src/lib/components/icons/icons.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { INode } from 'ngx-explorer';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FILTER_STRING } from '../../injection-tokens/tokens';\r\nimport { ExplorerService } from '../../services/explorer.service';\r\nimport { HelperService } from '../../services/helper.service';\r\nimport { BaseView } from '../base-view/base-view.directive';\r\n\r\n@Component({\r\n    selector: 'nxe-icons',\r\n    templateUrl: './icons.component.html',\r\n    styleUrls: ['./icons.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class IconsComponent extends BaseView {\r\n\r\n    public readonly icons = {\r\n        node: 'nxe-folder',\r\n        leaf: 'txt',\r\n        pdf: 'pdf',\r\n        audio: 'audio',\r\n        code: 'code',\r\n        doc: 'doc',\r\n        exe: 'exe',\r\n        odp: 'odp',\r\n        img: 'photo',\r\n        pptx: 'pptx',\r\n        vector: 'vector',\r\n        video: 'video',\r\n        xlsx: 'xlsx',\r\n        zip: 'zip',\r\n    };\r\n\r\n    constructor(explorerService: ExplorerService, helperService: HelperService, @Inject(FILTER_STRING) filter: BehaviorSubject<string>) {\r\n        super(explorerService, helperService, filter);\r\n    }\r\n\r\n    openner(event: MouseEvent, item: INode) {\r\n        if (item.isLeaf) {\r\n            this.openLeaf(event, item);\r\n        } else {\r\n            this.open(event, item);\r\n        }\r\n    }\r\n\r\n    rightClick(event: MouseEvent, item: INode) {\r\n        super.select(event, item)\r\n        this.dbClick(item);\r\n    }\r\n\r\n    select(event: MouseEvent, item: INode) {\r\n        super.select(event, item)\r\n        this.dbSelect(item)\r\n    }\r\n\r\n    emptySpaceClick() {\r\n        super.emptySpaceClick()\r\n        this.emptyClick()\r\n    }\r\n\r\n    getIcons(item: any): string {\r\n        return item.isLeaf ? this.getIconByFileType(item.data) : this.icons.node;\r\n    }\r\n\r\n    getIconByFileType(data: any): string {\r\n        let fileType = this.getFileType(data)\r\n        const photoName = this.photoMap[fileType] || 'txt';\r\n        return photoName;\r\n    }\r\n\r\n    photoMap = {\r\n        'application/pdf': 'pdf',\r\n        'application/msword': 'doc',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'doc',\r\n        'application/vnd.oasis.opendocument.presentation': 'odp',\r\n        'application/vnd.oasis.opendocument.spreadsheet': 'ods',\r\n        'application/vnd.ms-powerpoint': 'pptx',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'pptx',\r\n        'text/plain': 'txt',\r\n        'video/mp4': 'video',\r\n        'application/vnd.ms-excel': 'xlsx',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'xlsx',\r\n        'image/jpeg': 'photo',\r\n        'image/png': 'photo',\r\n        'audio/x-ms-wma': 'audio',\r\n        'audio/mpeg': 'audio',\r\n        'audio/webm': 'audio.',\r\n        'audio/ogg': 'audio',\r\n        'audio/wav': 'audio',\r\n        'application/x-msdownload': 'exe',\r\n        'application/zip': 'zip',\r\n        'image/svg+xml': 'vector'\r\n    };\r\n}\r\n\r\n"]}