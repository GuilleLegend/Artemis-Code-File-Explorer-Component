{"version":3,"file":"drag-drop.directive.js","sourceRoot":"","sources":["../../../../src/lib/directives/drag-drop.directive.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAMvE,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IAO5B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAN1C,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QACpC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QACnC,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QACpC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QACnC,aAAQ,GAAG,IAAI,YAAY,EAAW,CAAC;IAEO,CAAC;IAGlD,WAAW,CAAC,KAAK;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE3B,CAAC;IAGM,UAAU,CAAC,KAAK;QACrB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGM,WAAW,CAAC,KAAK;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAGM,MAAM,CAAC,KAAK;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;QACvC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CAEF,CAAA;AA7CW;IAAT,MAAM,EAAE;oDAAqC;AACpC;IAAT,MAAM,EAAE;mDAAoC;AACnC;IAAT,MAAM,EAAE;oDAAqC;AACpC;IAAT,MAAM,EAAE;mDAAoC;AACnC;IAAT,MAAM,EAAE;mDAAwC;AAKjD;IADC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;oDAOrC;AAGD;IADC,YAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;mDAMpC;AAGD;IADC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;oDAMrC;AAGD;IADC,YAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;+CAUhC;AA5CU,iBAAiB;IAH7B,SAAS,CAAC;QACT,QAAQ,EAAE,eAAe;KAC1B,CAAC;GACW,iBAAiB,CA8C7B;SA9CY,iBAAiB","sourcesContent":["import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\nimport { ExplorerService } from '../services/explorer.service';\r\n\r\n@Directive({\r\n  selector: '[nxeDragDrop]'\r\n})\r\nexport class DragDropDirective {\r\n  @Output() dragEnter = new EventEmitter<any>();\r\n  @Output() dragOver = new EventEmitter<any>();\r\n  @Output() dragLeave = new EventEmitter<any>();\r\n  @Output() dragDrop = new EventEmitter<any>();\r\n  @Output() dragging = new EventEmitter<boolean>();\r\n\r\n  constructor(private explorerService: ExplorerService) { }\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  public onDragEnter(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.dragEnter.emit(event);\r\n    this.dragging.emit(true);\r\n\r\n  }\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.dragOver.emit(event);\r\n    this.dragging.emit(true);\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.dragLeave.emit(event);\r\n    this.dragging.emit(false);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const files = event.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.explorerService.upload(files);\r\n      this.dragDrop.emit(files);\r\n    }\r\n    this.dragging.emit(false);\r\n  }\r\n\r\n}\r\n"]}