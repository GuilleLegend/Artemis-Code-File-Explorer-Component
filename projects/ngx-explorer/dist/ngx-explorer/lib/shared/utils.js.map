{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/lib/shared/utils.ts"],"names":[],"mappings":"AAEA,MAAa,KAAK;IAId,MAAM,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,IAAU;QACtD,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC;QACrB,OAAO;YACH,EAAE;YACF,QAAQ;YACR,IAAI;YACJ,MAAM;YACN,QAAQ,EAAE,EAAE;SACf,CAAC;IACN,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,YAA+B,EAAE,IAAW;QAChE,MAAM,MAAM,GAAG,EAAa,CAAC;QAC7B,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,OAAO,IAAI,EAAE;YACT,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC5B,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACtB,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACpD;iBAAM;gBACH,MAAM;aACT;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,CAAM,EAAE,CAAM;QAChC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;;AA7Bc,QAAE,GAAG,CAAC,CAAC;SAFb,KAAK","sourcesContent":["import { INode, Dictionary } from './types';\r\n\r\nexport class Utils {\r\n\r\n    private static id = 0;\r\n\r\n    static createNode(parentId = 0, isLeaf = false, data?: any): INode {\r\n        const id = ++this.id;\r\n        return {\r\n            id,\r\n            parentId,\r\n            data,\r\n            isLeaf,\r\n            children: []\r\n        };\r\n    }\r\n\r\n    static buildBreadcrumbs(flatPointers: Dictionary<INode>, node: INode) {\r\n        const pieces = [] as INode[];\r\n        let currentNode = node;\r\n        while (true) {\r\n            pieces.unshift(currentNode);\r\n            if (currentNode.parentId) {\r\n                currentNode = flatPointers[currentNode.parentId];\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    static compareObjects(a: any, b: any) {\r\n        return JSON.stringify(a) === JSON.stringify(b);\r\n    }\r\n}\r\n"]}